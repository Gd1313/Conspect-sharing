@model IEnumerable<Conspect_sharing.Models.AdminTable>
@{
    ViewData["Title"] = "AdminTable";
}
<html>
<head>
    <meta charset="utf-8">
    <title>Users Table</title>
    <link href="~/css/admin_panel.css" rel="stylesheet" />

</head>
<body>
    <nav class="navbar navbar-light" style="background-color: #5b6073;" width="">
        <button type="button" class="btn btn-warning" onclick="Locking()" title="Lock user">Lock user</button>
        <button type="button" class="btn btn-danger" onclick="Delete()" title="Delete user">Delete user</button>
        <button type="button" class="btn btn-success" onclick="Unlocking()" title="Unlock user">Unlock user</button>
        <button type="button" class="btn btn-info" onclick="ChangeRole()" title="Change role">Change role</button>
    </nav>

    <table id="myTable" class="display">
        <thead>


            <tr>
                <th>Выбрать пользователя</th>

                <th>
                    Пользователь
                </th>
                <th>
                    Роль
                </th>
                <th>
                    Статус
                </th>

            </tr>
        </thead>
       
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input class="checkbox" type="checkbox" name="statuses" value="@item.UserName">
                    </td>
                    <td>
                        @Html.ActionLink(item.UserName, "Index", "ArticleManage", new { userId = item.UserId })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role)
                    </td>
                    <td>
                        @if (item.Status == true)
                        {
                            <p>Active</p>
                        }
                        @if (item.Status == false)
                        {
                            <p>Blocked</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @section Scripts {
        <script>
        $('#myTable').DataTable();

        $('#select_all').click(function () {
        var c = this.checked;
        $(':checkbox').prop('checked', c);
        });
        function Locking() {
        $.ajax({
        type: 'POST',
        url: "@Url.Action("LockUser", "Manage")",
        data: { arr: getCheckedCheckBoxes() },
        success: function (data) {
        if (data == true) {
        location.reload();
        }
        else {
        }
        },
        error: function () {
        alert("Error");
        }
        });
        }

        function ChangeRole() {
        $.ajax({
        type: 'POST',
        url: "@Url.Action("ChangeRole", "Manage")",
        data: { arr: getCheckedCheckBoxes() },
        success: function (data) {
        if (data == true) {
        location.reload();
        }
        else {
        }
        },
        error: function () {
        alert("Error");
        }
        });
        }
        function Unlocking() {
        $.ajax({
        type: 'POST',
        url: "@Url.Action("UnLockUser", "Manage")",
        data: { arr: getCheckedCheckBoxes() },
        success: function (data) {
        if (data == true) {
        location.reload();
        }
        else {
        }
        },
        error: function () {
        alert("Error");
        }
        });
        }
        function Delete() {
        $.ajax({
        type: 'POST',
        url: "@Url.Action("DeleteUser", "Manage")",
        data: { arr: getCheckedCheckBoxes() },
        success: function (data) {
        if (data == true) {
        location.reload();
        }
        else {
        }
        },
        error: function () {
        alert("Error");
        }
        });
        }

        function getCheckedCheckBoxes() {
        var checkboxes = document.getElementsByClassName('checkbox');
        var checkboxesChecked = [];
        for (var index = 0; index < checkboxes.length; index++) {
        if (checkboxes[index].checked) {
        checkboxesChecked.push(checkboxes[index].value);
        }
        }
        return checkboxesChecked;
        }
        </script>
    }
</body>
</html>
@*@RenderSection("Scripts", required: false)*@

